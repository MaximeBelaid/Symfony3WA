<?php

namespace Troiswa\BackBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;


/**
 * Image
 *
 * @ORM\Table(name="image")
 * @ORM\Entity(repositoryClass="Troiswa\BackBundle\Repository\ImageRepository")
 * @ORM\HasLifecycleCallbacks
 */
class Image
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=100)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="caption", type="string", length=100)
     */
    private $caption;

    /**
     * @Assert\File(
     *     maxSize = "500k",
     *     mimeTypes = {"image/png", "image/jpg", "image/jpeg", "image/gif"},
     *     mimeTypesMessage = "Please upload a valid image")
     *
     */
    private $fichier;

    /**
     * @ORM\OneToOne(targetEntity="Categorie", mappedBy="image",cascade={"persist"})
     * @Assert\Valid
     */
    private $categorie;


    // propriété permettant de sauvegarder l'ancien nom de l'image (lorsqu'on fait une édition)
    private $oldName;

    public function getFichier()
    {
        return $this->fichier;
    }

    public function setFichier(UploadedFile $fichier)
    {
        $this->fichier = $fichier;

        // Si j'ai déjà un nom (édition), je sauvegarde celui-ci dans une propriété oldName
        if (null != $this->name)
        {
            $this->oldName = $this->name;

            $this->name = "";
        }

        return $this;
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Image
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set caption
     *
     * @param string $caption
     *
     * @return Image
     */
    public function setCaption($caption)
    {
        $this->caption = $caption;

        return $this;
    }

    /**
     * Get caption
     *
     * @return string
     */
    public function getCaption()
    {
        return $this->caption;
    }

    /**
     * @ORM\PreUpdate()
     */
    public function test()
    {
        die('salut');
    }

    /**
     * @ORM\PrePersist()
     * @ORM\PreUpdate()
     */
    public function upload()
    {
        die('upload');
        $nameImage = str_replace('.','',uniqid("", true)).'.'.$this->fichier
                ->guessExtension();
        //die(dump($nameImage));
        $this->fichier->move(
            __DIR__."/../../../../web/".$this->getRootWebDir(),
            $nameImage
        );
        $this->name = $nameImage;
        //$this->caption = $nameImage;
        //die("ok");

        // Suppression de l'ancienne image
        if (!empty($this->oldName))
        {
            die('code de la suppression');
        }

    }

    public function webPath()
    {
        return $this->getRootWebDir()."/".$this->name;
    }

    private function getRootWebDir()
    {
        return "uploads/categories";
    }

    /**
     * @Assert\Callback
     */
    public function isValidate(ExecutionContextInterface $context)
    {
        if ($this->fichier != null && $this->caption == null) {
            $context->buildViolation('La légende est obligatoire si vous uploadez une image')
                ->atPath('caption')
                ->addViolation();
        }
    }
}
